{"ast":null,"code":"import ActionTypes from './actionTypes';\nimport universitiesParser from '../../shared/parser';\nimport request from '../../js/request/request';\n\nconst fetchingUniversity = () => ({\n  type: ActionTypes.FETCH_UNIVERSITIES\n});\n\nconst setAUniversities = data => ({\n  type: ActionTypes.SET_UNIVERSITIES,\n  data\n});\n\nconst getAllUniversity = () => dispatch => {\n  dispatch(fetchingUniversity());\n  return request.getAllUniversity().then(response => {\n    dispatch(setAUniversities({\n      universities: universitiesParser(response && response.data || []),\n      universitiesByCountry: universitiesParser(response && response.data || [], 'country')\n    }));\n  }).catch(err => {\n    console.log('error');\n  });\n};\n\nexport default {\n  getAllUniversity\n};","map":{"version":3,"sources":["/Users/priyarajak/priya/src/containers/home/actions.js"],"names":["ActionTypes","universitiesParser","request","fetchingUniversity","type","FETCH_UNIVERSITIES","setAUniversities","data","SET_UNIVERSITIES","getAllUniversity","dispatch","then","response","universities","universitiesByCountry","catch","err","console","log"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,kBAAP,MAA+B,qBAA/B;AACA,OAAOC,OAAP,MAAoB,0BAApB;;AACA,MAAMC,kBAAkB,GAAG,OAAO;AACjCC,EAAAA,IAAI,EAAEJ,WAAW,CAACK;AADe,CAAP,CAA3B;;AAIA,MAAMC,gBAAgB,GAAIC,IAAD,KAAW;AACnCH,EAAAA,IAAI,EAAEJ,WAAW,CAACQ,gBADiB;AAEnCD,EAAAA;AAFmC,CAAX,CAAzB;;AAKA,MAAME,gBAAgB,GAAG,MAAOC,QAAD,IAAc;AAC5CA,EAAAA,QAAQ,CAACP,kBAAkB,EAAnB,CAAR;AACA,SAAOD,OAAO,CAACO,gBAAR,GAA2BE,IAA3B,CAAgCC,QAAQ,IAAI;AAClDF,IAAAA,QAAQ,CAACJ,gBAAgB,CAAC;AAChBO,MAAAA,YAAY,EAAGZ,kBAAkB,CAAEW,QAAQ,IAAIA,QAAQ,CAACL,IAAtB,IAA+B,EAAhC,CADjB;AAEhBO,MAAAA,qBAAqB,EAAEb,kBAAkB,CAAEW,QAAQ,IAAIA,QAAQ,CAACL,IAAtB,IAA+B,EAAhC,EAAoC,SAApC;AAFzB,KAAD,CAAjB,CAAR;AAIA,GALM,EAKJQ,KALI,CAKEC,GAAG,IAAI;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,GAPM,CAAP;AAQA,CAVD;;AAWA,eAAe;AACdT,EAAAA;AADc,CAAf","sourcesContent":["import ActionTypes from './actionTypes';\nimport universitiesParser from '../../shared/parser'\nimport request from '../../js/request/request'\nconst fetchingUniversity = () => ({\n\ttype: ActionTypes.FETCH_UNIVERSITIES\n});\n\nconst setAUniversities = (data) => ({\n\ttype: ActionTypes.SET_UNIVERSITIES,\n\tdata\n});\n\nconst getAllUniversity = () => (dispatch) => {\n\tdispatch(fetchingUniversity())\n\treturn request.getAllUniversity().then(response => {\n\t\tdispatch(setAUniversities({\n            universities : universitiesParser((response && response.data) || []),\n            universitiesByCountry: universitiesParser((response && response.data) || [], 'country'),\n        }))\n\t}).catch(err => {\n\t\tconsole.log('error')\n\t})\n}\nexport default {\n\tgetAllUniversity\n}"]},"metadata":{},"sourceType":"module"}