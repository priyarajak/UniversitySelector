{"ast":null,"code":"import ActionTypes from \"./actionTypes\";\nconst bucket_id = \"bucket\";\n\nconst fetchingBucket = () => ({\n  type: ActionTypes.FETCH_BUCKET\n});\n\nconst setBucket = data => ({\n  type: ActionTypes.SET_BUCKET,\n  data\n});\n\nconst updateBucket = data => ({\n  type: ActionTypes.UPDATE_BUCKET,\n  data\n});\n\nconst getBucket = () => dispatch => {\n  dispatch(fetchingBucket());\n\n  try {\n    const bucket = typeof localStorage != \"undefined\" && JSON.parse(localStorage.getItem(bucket_id)) || [];\n    dispatch(setBucket(bucket));\n  } catch (e) {\n    dispatch(setBucket([]));\n  }\n};\n\nexport default {\n  getBucket,\n  setBucket,\n  updateBucket\n};","map":{"version":3,"sources":["/Users/priyarajak/priya/src/containers/universityBucket/action.js"],"names":["ActionTypes","bucket_id","fetchingBucket","type","FETCH_BUCKET","setBucket","data","SET_BUCKET","updateBucket","UPDATE_BUCKET","getBucket","dispatch","bucket","localStorage","JSON","parse","getItem","e"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,MAAMC,SAAS,GAAG,QAAlB;;AACA,MAAMC,cAAc,GAAG,OAAO;AAC1BC,EAAAA,IAAI,EAAEH,WAAW,CAACI;AADQ,CAAP,CAAvB;;AAIA,MAAMC,SAAS,GAAIC,IAAD,KAAW;AACzBH,EAAAA,IAAI,EAAEH,WAAW,CAACO,UADO;AAEzBD,EAAAA;AAFyB,CAAX,CAAlB;;AAKA,MAAME,YAAY,GAAIF,IAAD,KAAW;AAC5BH,EAAAA,IAAI,EAAEH,WAAW,CAACS,aADU;AAE5BH,EAAAA;AAF4B,CAAX,CAArB;;AAKA,MAAMI,SAAS,GAAG,MAAOC,QAAD,IAAc;AAClCA,EAAAA,QAAQ,CAACT,cAAc,EAAf,CAAR;;AACA,MAAI;AACA,UAAMU,MAAM,GAAI,OAAOC,YAAP,IAAuB,WAAvB,IAAsCC,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACG,OAAb,CAAqBf,SAArB,CAAX,CAAvC,IAAuF,EAAtG;AACAU,IAAAA,QAAQ,CAACN,SAAS,CAACO,MAAD,CAAV,CAAR;AACH,GAHD,CAGE,OAAOK,CAAP,EAAU;AACRN,IAAAA,QAAQ,CAACN,SAAS,CAAC,EAAD,CAAV,CAAR;AACH;AACJ,CARD;;AASA,eAAe;AACXK,EAAAA,SADW;AAEXL,EAAAA,SAFW;AAGXG,EAAAA;AAHW,CAAf","sourcesContent":["import ActionTypes from \"./actionTypes\"\nconst bucket_id = \"bucket\"\nconst fetchingBucket = () => ({\n    type: ActionTypes.FETCH_BUCKET,\n})\n\nconst setBucket = (data) => ({\n    type: ActionTypes.SET_BUCKET,\n    data,\n})\n\nconst updateBucket = (data) => ({\n    type: ActionTypes.UPDATE_BUCKET,\n    data,\n})\n\nconst getBucket = () => (dispatch) => {\n    dispatch(fetchingBucket())\n    try {\n        const bucket = (typeof localStorage != \"undefined\" && JSON.parse(localStorage.getItem(bucket_id))) || []\n        dispatch(setBucket(bucket))\n    } catch (e) {\n        dispatch(setBucket([]))\n    }\n}\nexport default {\n    getBucket,\n    setBucket,\n    updateBucket,\n}\n"]},"metadata":{},"sourceType":"module"}