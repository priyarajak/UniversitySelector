{"ast":null,"code":"const universitiesParser = (data, type) => {\n  if (type) {\n    const obj = {};\n    data.map(uni => {\n      const university = universityParser(uni);\n      obj[university[type]] = obj[university[type]] ? obj[university[type]] : [];\n      obj[university[type]].push(university);\n    });\n    return obj;\n  }\n\n  return data.map(uni => universityParser(uni));\n};\n\nconst universityParser = university => {\n  const {\n    alpha_two_code,\n    country,\n    name,\n    web_pages\n  } = university || {};\n  return {\n    universityName: name,\n    countryCode: alpha_two_code,\n    url: web_pages && web_pages[0],\n    country,\n    action: {\n      label: 'Add into my Bucket'\n    }\n  };\n};\n\nexport default universitiesParser;","map":{"version":3,"sources":["/Users/priyarajak/priya/src/shared/parser/university.js"],"names":["universitiesParser","data","type","obj","map","uni","university","universityParser","push","alpha_two_code","country","name","web_pages","universityName","countryCode","url","action","label"],"mappings":"AAAA,MAAMA,kBAAkB,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACvC,MAAIA,IAAJ,EAAU;AACN,UAAMC,GAAG,GAAG,EAAZ;AACAF,IAAAA,IAAI,CAACG,GAAL,CAAUC,GAAD,IAAS;AACd,YAAMC,UAAU,GAAGC,gBAAgB,CAACF,GAAD,CAAnC;AACAF,MAAAA,GAAG,CAACG,UAAU,CAACJ,IAAD,CAAX,CAAH,GAAwBC,GAAG,CAACG,UAAU,CAACJ,IAAD,CAAX,CAAH,GAAwBC,GAAG,CAACG,UAAU,CAACJ,IAAD,CAAX,CAA3B,GAAgD,EAAxE;AACAC,MAAAA,GAAG,CAACG,UAAU,CAACJ,IAAD,CAAX,CAAH,CAAsBM,IAAtB,CAA2BF,UAA3B;AACH,KAJD;AAKA,WAAOH,GAAP;AACH;;AACD,SAAOF,IAAI,CAACG,GAAL,CAAUC,GAAD,IAASE,gBAAgB,CAACF,GAAD,CAAlC,CAAP;AACH,CAXD;;AAaA,MAAME,gBAAgB,GAAID,UAAD,IAAgB;AACrC,QAAM;AAAEG,IAAAA,cAAF;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA,IAA3B;AAAiCC,IAAAA;AAAjC,MAA+CN,UAAU,IAAI,EAAnE;AAEA,SAAO;AACHO,IAAAA,cAAc,EAAEF,IADb;AAEHG,IAAAA,WAAW,EAAEL,cAFV;AAGHM,IAAAA,GAAG,EAAEH,SAAS,IAAIA,SAAS,CAAC,CAAD,CAHxB;AAIHF,IAAAA,OAJG;AAKHM,IAAAA,MAAM,EAAG;AACLC,MAAAA,KAAK,EAAG;AADH;AALN,GAAP;AASH,CAZD;;AAcA,eAAejB,kBAAf","sourcesContent":["const universitiesParser = (data, type) => {\n    if (type) {\n        const obj = {}\n        data.map((uni) => {\n            const university = universityParser(uni)\n            obj[university[type]] = obj[university[type]] ? obj[university[type]] : []\n            obj[university[type]].push(university)\n        })\n        return obj\n    }\n    return data.map((uni) => universityParser(uni))\n}\n\nconst universityParser = (university) => {\n    const { alpha_two_code, country, name, web_pages } = university || {}\n\n    return {\n        universityName: name,\n        countryCode: alpha_two_code,\n        url: web_pages && web_pages[0],\n        country,\n        action : {\n            label : 'Add into my Bucket'\n        }\n    }\n}\n\nexport default universitiesParser;\n"]},"metadata":{},"sourceType":"module"}